# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build Stage'
  variables:
    disable.coverage.autogenerate: true
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'rentalcompany'
        scannerMode: 'MSBuild'
        projectKey: 'jhouamaral_RentalCompany'
        projectName: 'RentalCompany'

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet restore
      displayName: 'Restore NuGet Packages'

    - script: dotnet build --configuration $(buildConfiguration) --no-restore
      displayName: 'Build Solution'
    - task: SonarCloudAnalyze@1
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '500'

    - script: dotnet test --configuration $(buildConfiguration) --collect:"XPlat Code Coverage"
      displayName: 'Run Tests with Code Coverage'
      continueOnError: true

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        arguments: '--configuration Release --no-restore --no-build --output $(Build.StagingDirectory)/publish-artifacts'
        zipAfterPublish: false
        modifyOutputPath: false
        pathToPublish: $(Build.ArtifactStagingDirectory)

    - publish:  $(Build.StagingDirectory)/publish-artifacts
      artifact: publish-artifacts
        
    - task: CopyFiles@2
      displayName: Save Unit Tests Results
      inputs:
        SourceFolder: $(Agent.TempDirectory)
        TargetFolder: $(Agent.BuildDirectory)/TestResults
        OverWrite: true

    - task: PublishTestResults@2
      displayName: Publish Test Results *.trx
      inputs:
        testRunner: VSTest
        testResultsFiles: '*.trx'
        searchFolder: $(Agent.BuildDirectory)/TestResults
        mergeTestResults: true
        failTaskOnFailedTests: true

    - task: reportgenerator@5
      displayName: Generate Code Coverage Reports
      inputs:
        reports: $(Build.SourcesDirectory)/tests/**/coverage.cobertura.xml
        targetdir: $(Build.SourcesDirectory)/CodeCoverage

    - task: PublishCodeCoverageResults@1
      displayName: Publish code coverage
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml
        reportDirectory: $(Build.SourcesDirectory)/CodeCoverage
        pathToSources: $(Build.SourcesDirectory)

    - task: BuildQualityChecks@9
      displayName: 'Check Build Quality'
      inputs:
        checkWarnings: false
        warningThreshold: 3
        showStatistics: true
        warningTaskFilters: '/^Build$/'
        warningFailOption: fixed
        checkCoverage: true
        coverageFailOption: fixed
        coverageType: lines
        coverageThreshold: 30
        coverageUpperThreshold: 100
