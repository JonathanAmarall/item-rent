# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet restore
      displayName: 'Restore NuGet Packages'

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build Solution'

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet test --configuration $(buildConfiguration) --collect:"XPlat Code Coverage"
      displayName: 'Run Tests with Code Coverage'
      continueOnError: true
      
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/app'
        artifactName: 'drop'
        publishLocation: 'Container'

    - task: PublishTestResults@2
      displayName: Publish Test Results *.trx
      inputs:
        testRunner: VSTest
        testResultsFiles: '*.trx'
        searchFolder: $(Agent.BuildDirectory)/TestResults
        mergeTestResults: true
        failTaskOnFailedTests: true
        testRunTitle: rental-company-tests
    - task: reportgenerator@5
      displayName: Generate Code Coverage Reports
      inputs:
        reports: $(Agent.TempDirectory)/**/coverage.cobertura.xml
        targetdir: $(Build.SourcesDirectory)/CodeCoverage

    - task: PublishCodeCoverageResults@1
      displayName: Publish code coverage
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/CodeCoverage/coverage.cobertura.xml
        reportDirectory: $(Build.SourcesDirectory)/CodeCoverage
        pathToSources: $(Build.SourcesDirectory)

# - task: BuildQualityChecks@8
#   displayName: 'Check Build Quality'
#   inputs:
#     checkWarnings: $(BuildQualityChecks.CheckWarnings)
#     warningThreshold: $(BuildQualityChecks.WarningThreshold)
#     showStatistics: true
#     warningTaskFilters: '/^Build$/'
#     warningFailOption: fixed
#     checkCoverage: $(BuildQualityChecks.CheckCoverage)
#     coverageFailOption: fixed
#     coverageType: lines
#     coverageThreshold: $(BuildQualityChecks.CoverageThreshodld)
#     coverageUpperThreshold: 100
